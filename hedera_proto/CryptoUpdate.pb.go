// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CryptoUpdate.proto

package hedera_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Change properties for the given account. Any null field is ignored (left unchanged). This transaction must be signed by the existing key for this account. If the transaction is changing the key field, then the transaction must be signed by both the old key (from before the change) and the new key. The old key must sign for security. The new key must sign as a safeguard to avoid accidentally changing to an invalid key, and then having no way to recover. When extending the expiration date, the cost is affected by the size of the list of attached claims, and of the keys associated with the claims and the account.
type CryptoUpdateTransactionBody struct {
	AccountIDToUpdate *AccountID `protobuf:"bytes,2,opt,name=accountIDToUpdate,proto3" json:"accountIDToUpdate,omitempty"`
	Key               *Key       `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	ProxyAccountID    *AccountID `protobuf:"bytes,4,opt,name=proxyAccountID,proto3" json:"proxyAccountID,omitempty"`
	ProxyFraction     int32      `protobuf:"varint,5,opt,name=proxyFraction,proto3" json:"proxyFraction,omitempty"` // Deprecated: Do not use.
	// Types that are valid to be assigned to SendRecordThresholdField:
	//	*CryptoUpdateTransactionBody_SendRecordThreshold
	//	*CryptoUpdateTransactionBody_SendRecordThresholdWrapper
	SendRecordThresholdField isCryptoUpdateTransactionBody_SendRecordThresholdField `protobuf_oneof:"sendRecordThresholdField"`
	// Types that are valid to be assigned to ReceiveRecordThresholdField:
	//	*CryptoUpdateTransactionBody_ReceiveRecordThreshold
	//	*CryptoUpdateTransactionBody_ReceiveRecordThresholdWrapper
	ReceiveRecordThresholdField isCryptoUpdateTransactionBody_ReceiveRecordThresholdField `protobuf_oneof:"receiveRecordThresholdField"`
	AutoRenewPeriod             *Duration                                                 `protobuf:"bytes,8,opt,name=autoRenewPeriod,proto3" json:"autoRenewPeriod,omitempty"`
	ExpirationTime              *Timestamp                                                `protobuf:"bytes,9,opt,name=expirationTime,proto3" json:"expirationTime,omitempty"`
	// Types that are valid to be assigned to ReceiverSigRequiredField:
	//	*CryptoUpdateTransactionBody_ReceiverSigRequired
	//	*CryptoUpdateTransactionBody_ReceiverSigRequiredWrapper
	ReceiverSigRequiredField isCryptoUpdateTransactionBody_ReceiverSigRequiredField `protobuf_oneof:"receiverSigRequiredField"`
	XXX_NoUnkeyedLiteral     struct{}                                               `json:"-"`
	XXX_unrecognized         []byte                                                 `json:"-"`
	XXX_sizecache            int32                                                  `json:"-"`
}

func (m *CryptoUpdateTransactionBody) Reset()         { *m = CryptoUpdateTransactionBody{} }
func (m *CryptoUpdateTransactionBody) String() string { return proto.CompactTextString(m) }
func (*CryptoUpdateTransactionBody) ProtoMessage()    {}
func (*CryptoUpdateTransactionBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb78671897dfb7d1, []int{0}
}

func (m *CryptoUpdateTransactionBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoUpdateTransactionBody.Unmarshal(m, b)
}
func (m *CryptoUpdateTransactionBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoUpdateTransactionBody.Marshal(b, m, deterministic)
}
func (m *CryptoUpdateTransactionBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoUpdateTransactionBody.Merge(m, src)
}
func (m *CryptoUpdateTransactionBody) XXX_Size() int {
	return xxx_messageInfo_CryptoUpdateTransactionBody.Size(m)
}
func (m *CryptoUpdateTransactionBody) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoUpdateTransactionBody.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoUpdateTransactionBody proto.InternalMessageInfo

func (m *CryptoUpdateTransactionBody) GetAccountIDToUpdate() *AccountID {
	if m != nil {
		return m.AccountIDToUpdate
	}
	return nil
}

func (m *CryptoUpdateTransactionBody) GetKey() *Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CryptoUpdateTransactionBody) GetProxyAccountID() *AccountID {
	if m != nil {
		return m.ProxyAccountID
	}
	return nil
}

// Deprecated: Do not use.
func (m *CryptoUpdateTransactionBody) GetProxyFraction() int32 {
	if m != nil {
		return m.ProxyFraction
	}
	return 0
}

type isCryptoUpdateTransactionBody_SendRecordThresholdField interface {
	isCryptoUpdateTransactionBody_SendRecordThresholdField()
}

type CryptoUpdateTransactionBody_SendRecordThreshold struct {
	SendRecordThreshold uint64 `protobuf:"varint,6,opt,name=sendRecordThreshold,proto3,oneof"`
}

type CryptoUpdateTransactionBody_SendRecordThresholdWrapper struct {
	SendRecordThresholdWrapper *wrappers.UInt64Value `protobuf:"bytes,11,opt,name=sendRecordThresholdWrapper,proto3,oneof"`
}

func (*CryptoUpdateTransactionBody_SendRecordThreshold) isCryptoUpdateTransactionBody_SendRecordThresholdField() {
}

func (*CryptoUpdateTransactionBody_SendRecordThresholdWrapper) isCryptoUpdateTransactionBody_SendRecordThresholdField() {
}

func (m *CryptoUpdateTransactionBody) GetSendRecordThresholdField() isCryptoUpdateTransactionBody_SendRecordThresholdField {
	if m != nil {
		return m.SendRecordThresholdField
	}
	return nil
}

// Deprecated: Do not use.
func (m *CryptoUpdateTransactionBody) GetSendRecordThreshold() uint64 {
	if x, ok := m.GetSendRecordThresholdField().(*CryptoUpdateTransactionBody_SendRecordThreshold); ok {
		return x.SendRecordThreshold
	}
	return 0
}

func (m *CryptoUpdateTransactionBody) GetSendRecordThresholdWrapper() *wrappers.UInt64Value {
	if x, ok := m.GetSendRecordThresholdField().(*CryptoUpdateTransactionBody_SendRecordThresholdWrapper); ok {
		return x.SendRecordThresholdWrapper
	}
	return nil
}

type isCryptoUpdateTransactionBody_ReceiveRecordThresholdField interface {
	isCryptoUpdateTransactionBody_ReceiveRecordThresholdField()
}

type CryptoUpdateTransactionBody_ReceiveRecordThreshold struct {
	ReceiveRecordThreshold uint64 `protobuf:"varint,7,opt,name=receiveRecordThreshold,proto3,oneof"`
}

type CryptoUpdateTransactionBody_ReceiveRecordThresholdWrapper struct {
	ReceiveRecordThresholdWrapper *wrappers.UInt64Value `protobuf:"bytes,12,opt,name=receiveRecordThresholdWrapper,proto3,oneof"`
}

func (*CryptoUpdateTransactionBody_ReceiveRecordThreshold) isCryptoUpdateTransactionBody_ReceiveRecordThresholdField() {
}

func (*CryptoUpdateTransactionBody_ReceiveRecordThresholdWrapper) isCryptoUpdateTransactionBody_ReceiveRecordThresholdField() {
}

func (m *CryptoUpdateTransactionBody) GetReceiveRecordThresholdField() isCryptoUpdateTransactionBody_ReceiveRecordThresholdField {
	if m != nil {
		return m.ReceiveRecordThresholdField
	}
	return nil
}

// Deprecated: Do not use.
func (m *CryptoUpdateTransactionBody) GetReceiveRecordThreshold() uint64 {
	if x, ok := m.GetReceiveRecordThresholdField().(*CryptoUpdateTransactionBody_ReceiveRecordThreshold); ok {
		return x.ReceiveRecordThreshold
	}
	return 0
}

func (m *CryptoUpdateTransactionBody) GetReceiveRecordThresholdWrapper() *wrappers.UInt64Value {
	if x, ok := m.GetReceiveRecordThresholdField().(*CryptoUpdateTransactionBody_ReceiveRecordThresholdWrapper); ok {
		return x.ReceiveRecordThresholdWrapper
	}
	return nil
}

func (m *CryptoUpdateTransactionBody) GetAutoRenewPeriod() *Duration {
	if m != nil {
		return m.AutoRenewPeriod
	}
	return nil
}

func (m *CryptoUpdateTransactionBody) GetExpirationTime() *Timestamp {
	if m != nil {
		return m.ExpirationTime
	}
	return nil
}

type isCryptoUpdateTransactionBody_ReceiverSigRequiredField interface {
	isCryptoUpdateTransactionBody_ReceiverSigRequiredField()
}

type CryptoUpdateTransactionBody_ReceiverSigRequired struct {
	ReceiverSigRequired bool `protobuf:"varint,10,opt,name=receiverSigRequired,proto3,oneof"`
}

type CryptoUpdateTransactionBody_ReceiverSigRequiredWrapper struct {
	ReceiverSigRequiredWrapper *wrappers.BoolValue `protobuf:"bytes,13,opt,name=receiverSigRequiredWrapper,proto3,oneof"`
}

func (*CryptoUpdateTransactionBody_ReceiverSigRequired) isCryptoUpdateTransactionBody_ReceiverSigRequiredField() {
}

func (*CryptoUpdateTransactionBody_ReceiverSigRequiredWrapper) isCryptoUpdateTransactionBody_ReceiverSigRequiredField() {
}

func (m *CryptoUpdateTransactionBody) GetReceiverSigRequiredField() isCryptoUpdateTransactionBody_ReceiverSigRequiredField {
	if m != nil {
		return m.ReceiverSigRequiredField
	}
	return nil
}

// Deprecated: Do not use.
func (m *CryptoUpdateTransactionBody) GetReceiverSigRequired() bool {
	if x, ok := m.GetReceiverSigRequiredField().(*CryptoUpdateTransactionBody_ReceiverSigRequired); ok {
		return x.ReceiverSigRequired
	}
	return false
}

func (m *CryptoUpdateTransactionBody) GetReceiverSigRequiredWrapper() *wrappers.BoolValue {
	if x, ok := m.GetReceiverSigRequiredField().(*CryptoUpdateTransactionBody_ReceiverSigRequiredWrapper); ok {
		return x.ReceiverSigRequiredWrapper
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CryptoUpdateTransactionBody) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CryptoUpdateTransactionBody_SendRecordThreshold)(nil),
		(*CryptoUpdateTransactionBody_SendRecordThresholdWrapper)(nil),
		(*CryptoUpdateTransactionBody_ReceiveRecordThreshold)(nil),
		(*CryptoUpdateTransactionBody_ReceiveRecordThresholdWrapper)(nil),
		(*CryptoUpdateTransactionBody_ReceiverSigRequired)(nil),
		(*CryptoUpdateTransactionBody_ReceiverSigRequiredWrapper)(nil),
	}
}

func init() {
	proto.RegisterType((*CryptoUpdateTransactionBody)(nil), "proto.CryptoUpdateTransactionBody")
}

func init() { proto.RegisterFile("CryptoUpdate.proto", fileDescriptor_bb78671897dfb7d1) }

var fileDescriptor_bb78671897dfb7d1 = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xdf, 0x6b, 0xd4, 0x40,
	0x18, 0x6c, 0xae, 0xbd, 0xb3, 0x7e, 0xfd, 0x71, 0x75, 0x05, 0x59, 0xd2, 0x56, 0x8e, 0x3e, 0xe5,
	0x29, 0x05, 0x2d, 0x45, 0x41, 0x04, 0x63, 0x29, 0x2d, 0xbe, 0x94, 0x35, 0x55, 0x10, 0x51, 0xd6,
	0xec, 0xe7, 0x65, 0x35, 0x97, 0x5d, 0x37, 0x49, 0xdb, 0xfc, 0xf1, 0x82, 0x64, 0x37, 0x39, 0xec,
	0x35, 0x3d, 0xfa, 0xb4, 0xec, 0x37, 0xb3, 0xb3, 0xc3, 0xcc, 0x07, 0xe4, 0xbd, 0xa9, 0x75, 0xa9,
	0x2e, 0xb5, 0xe0, 0x25, 0x86, 0xda, 0xa8, 0x52, 0x91, 0xa1, 0x3d, 0xfc, 0x9d, 0x88, 0x17, 0x32,
	0x89, 0x6b, 0x8d, 0x85, 0x03, 0xfc, 0xed, 0x93, 0xca, 0xf0, 0x52, 0xaa, 0xbc, 0xbd, 0x8f, 0x63,
	0x39, 0xc3, 0xa2, 0xe4, 0x33, 0xdd, 0x0e, 0x9e, 0x4f, 0x95, 0x9a, 0x66, 0x78, 0x68, 0x6f, 0x3f,
	0xaa, 0x9f, 0x87, 0xd7, 0x86, 0x6b, 0x8d, 0xa6, 0x15, 0x38, 0xf8, 0x3b, 0x82, 0xdd, 0xff, 0x3f,
	0x8c, 0x0d, 0xcf, 0x0b, 0x9e, 0x34, 0x92, 0x91, 0x12, 0x35, 0x79, 0x0b, 0x4f, 0x78, 0x92, 0xa8,
	0x2a, 0x2f, 0xcf, 0x4f, 0xe2, 0x96, 0x43, 0x07, 0x13, 0x2f, 0xd8, 0x78, 0xb1, 0xe3, 0x24, 0xc2,
	0x77, 0x1d, 0xce, 0xee, 0x52, 0xc9, 0x1e, 0xac, 0xfe, 0xc6, 0x9a, 0xae, 0xda, 0x17, 0xd0, 0xbe,
	0xf8, 0x80, 0x35, 0x6b, 0xc6, 0xe4, 0x15, 0x6c, 0x6b, 0xa3, 0x6e, 0xea, 0xb9, 0x04, 0x5d, 0xbb,
	0x47, 0x7a, 0x81, 0x47, 0x02, 0xd8, 0xb2, 0x93, 0x53, 0xe3, 0xcc, 0xd2, 0xe1, 0xc4, 0x0b, 0x86,
	0xd1, 0x80, 0x7a, 0xec, 0x36, 0x40, 0x8e, 0xe1, 0x69, 0x81, 0xb9, 0x60, 0x98, 0x28, 0x23, 0xe2,
	0xd4, 0x60, 0x91, 0xaa, 0x4c, 0xd0, 0xd1, 0xc4, 0x0b, 0xd6, 0x1a, 0xfe, 0xd9, 0x0a, 0xeb, 0x23,
	0x90, 0x6f, 0xe0, 0xf7, 0x8c, 0x3f, 0xbb, 0xf8, 0xe8, 0x86, 0xf5, 0xb9, 0x17, 0xba, 0x78, 0xc3,
	0x2e, 0xde, 0xf0, 0xf2, 0x3c, 0x2f, 0x8f, 0x8f, 0x3e, 0xf1, 0xac, 0xc2, 0xb3, 0x15, 0xb6, 0x44,
	0x81, 0xbc, 0x81, 0x67, 0x06, 0x13, 0x94, 0x57, 0xb8, 0x68, 0xed, 0xd1, 0xdc, 0x9a, 0xc7, 0xee,
	0xe1, 0x10, 0x01, 0xfb, 0xfd, 0x48, 0x67, 0x70, 0xf3, 0x01, 0x06, 0x3d, 0xb6, 0x5c, 0x84, 0xbc,
	0x86, 0x31, 0xaf, 0x4a, 0xc5, 0x30, 0xc7, 0xeb, 0x0b, 0x34, 0x52, 0x09, 0xba, 0x6e, 0x75, 0xc7,
	0x6d, 0x41, 0xdd, 0xfa, 0xb1, 0x45, 0x5e, 0x53, 0x2d, 0xde, 0x68, 0xe9, 0xe0, 0x66, 0x2b, 0xe9,
	0xe3, 0x5b, 0xd5, 0xce, 0x17, 0x95, 0x2d, 0xf0, 0x9a, 0xc2, 0x5a, 0x57, 0xe6, 0xa3, 0x9c, 0x32,
	0xfc, 0x53, 0x49, 0x83, 0x82, 0xc2, 0xc4, 0x0b, 0xd6, 0x6d, 0x2a, 0x03, 0xd6, 0x47, 0x20, 0x5f,
	0xc1, 0xef, 0x19, 0x77, 0x79, 0x6c, 0xd9, 0xdf, 0xfd, 0x3b, 0x79, 0x44, 0x4a, 0x65, 0x2e, 0x8d,
	0x01, 0x5b, 0xf2, 0x3e, 0xf2, 0x81, 0xf6, 0x94, 0x79, 0x2a, 0x31, 0x13, 0xd1, 0x3e, 0xec, 0xf6,
	0xe7, 0xe8, 0x60, 0x1f, 0x68, 0x8f, 0xb0, 0xc3, 0x8e, 0xe0, 0x20, 0x51, 0xb3, 0x30, 0x45, 0x81,
	0x86, 0xa7, 0xbc, 0x48, 0xa7, 0x86, 0xeb, 0x34, 0xe4, 0x5a, 0xb6, 0x39, 0xfd, 0xe2, 0x57, 0xfc,
	0xc2, 0xfb, 0xb2, 0xe9, 0x18, 0xdf, 0x9d, 0xef, 0x91, 0x3d, 0x5e, 0xfe, 0x0b, 0x00, 0x00, 0xff,
	0xff, 0x3b, 0x07, 0xcc, 0x5d, 0x2c, 0x04, 0x00, 0x00,
}
