// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TransactionGetFastRecord.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Get the tx record of a transaction, given its transaction ID. Once a transaction reaches consensus, then information about whether it succeeded or failed will be available until the end of the receipt period.  Before and after the receipt period, and for a transaction that was never submitted, the receipt is unknown.  This query is free (the payment field is left empty).
type TransactionGetFastRecordQuery struct {
	Header               *QueryHeader   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TransactionID        *TransactionID `protobuf:"bytes,2,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TransactionGetFastRecordQuery) Reset()         { *m = TransactionGetFastRecordQuery{} }
func (m *TransactionGetFastRecordQuery) String() string { return proto.CompactTextString(m) }
func (*TransactionGetFastRecordQuery) ProtoMessage()    {}
func (*TransactionGetFastRecordQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_df22a9c24e106d60, []int{0}
}

func (m *TransactionGetFastRecordQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionGetFastRecordQuery.Unmarshal(m, b)
}
func (m *TransactionGetFastRecordQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionGetFastRecordQuery.Marshal(b, m, deterministic)
}
func (m *TransactionGetFastRecordQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionGetFastRecordQuery.Merge(m, src)
}
func (m *TransactionGetFastRecordQuery) XXX_Size() int {
	return xxx_messageInfo_TransactionGetFastRecordQuery.Size(m)
}
func (m *TransactionGetFastRecordQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionGetFastRecordQuery.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionGetFastRecordQuery proto.InternalMessageInfo

func (m *TransactionGetFastRecordQuery) GetHeader() *QueryHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TransactionGetFastRecordQuery) GetTransactionID() *TransactionID {
	if m != nil {
		return m.TransactionID
	}
	return nil
}

// Response when the client sends the node TransactionGetFastRecordQuery. If it created a new entity (account, file, or smart contract instance) then one of the three ID fields will be filled in with the ID of the new entity. Sometimes a single transaction will create more than one new entity, such as when a new contract instance is created, and this also creates the new account that it owned by that instance.
type TransactionGetFastRecordResponse struct {
	Header               *ResponseHeader    `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TransactionRecord    *TransactionRecord `protobuf:"bytes,2,opt,name=transactionRecord,proto3" json:"transactionRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TransactionGetFastRecordResponse) Reset()         { *m = TransactionGetFastRecordResponse{} }
func (m *TransactionGetFastRecordResponse) String() string { return proto.CompactTextString(m) }
func (*TransactionGetFastRecordResponse) ProtoMessage()    {}
func (*TransactionGetFastRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df22a9c24e106d60, []int{1}
}

func (m *TransactionGetFastRecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionGetFastRecordResponse.Unmarshal(m, b)
}
func (m *TransactionGetFastRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionGetFastRecordResponse.Marshal(b, m, deterministic)
}
func (m *TransactionGetFastRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionGetFastRecordResponse.Merge(m, src)
}
func (m *TransactionGetFastRecordResponse) XXX_Size() int {
	return xxx_messageInfo_TransactionGetFastRecordResponse.Size(m)
}
func (m *TransactionGetFastRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionGetFastRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionGetFastRecordResponse proto.InternalMessageInfo

func (m *TransactionGetFastRecordResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TransactionGetFastRecordResponse) GetTransactionRecord() *TransactionRecord {
	if m != nil {
		return m.TransactionRecord
	}
	return nil
}

func init() {
	proto.RegisterType((*TransactionGetFastRecordQuery)(nil), "proto.TransactionGetFastRecordQuery")
	proto.RegisterType((*TransactionGetFastRecordResponse)(nil), "proto.TransactionGetFastRecordResponse")
}

func init() { proto.RegisterFile("TransactionGetFastRecord.proto", fileDescriptor_df22a9c24e106d60) }

var fileDescriptor_df22a9c24e106d60 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x0b, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0x73, 0x4f, 0x2d, 0x71, 0x4b, 0x2c, 0x2e, 0x09, 0x4a,
	0x4d, 0xce, 0x2f, 0x4a, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0xe2,
	0x48, 0xca, 0x90, 0xe5, 0xa5, 0x04, 0x9c, 0x12, 0x8b, 0x33, 0x93, 0x43, 0x2a, 0x0b, 0x52, 0x8b,
	0xa1, 0x22, 0x82, 0x81, 0xa5, 0xa9, 0x45, 0x95, 0x1e, 0xa9, 0x89, 0x29, 0xa9, 0x45, 0x50, 0x21,
	0x91, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x64, 0x51, 0xa5, 0x76, 0x46, 0x2e, 0x59,
	0x5c, 0xb6, 0x83, 0xcd, 0x10, 0xd2, 0xe2, 0x62, 0xcb, 0x00, 0xeb, 0x90, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x36, 0x12, 0x82, 0xe8, 0xd4, 0x43, 0xb2, 0x21, 0x08, 0xaa, 0x42, 0xc8, 0x8a, 0x8b, 0xb7,
	0x04, 0x61, 0x98, 0xa7, 0x8b, 0x04, 0x13, 0x58, 0x8b, 0x08, 0x54, 0x4b, 0x08, 0xb2, 0x5c, 0x10,
	0xaa, 0x52, 0xa5, 0x99, 0x8c, 0x5c, 0x0a, 0xb8, 0x5c, 0x02, 0x73, 0xba, 0x90, 0x2e, 0x9a, 0x63,
	0x44, 0xa1, 0x26, 0xa3, 0xfa, 0x0d, 0xee, 0x1e, 0x37, 0x2e, 0xc1, 0x12, 0xf4, 0x30, 0x83, 0xba,
	0x49, 0x02, 0xd3, 0x4d, 0x50, 0xbb, 0x30, 0xb5, 0x38, 0xa9, 0x71, 0x29, 0x25, 0xe7, 0xe7, 0xea,
	0x65, 0xa4, 0xa6, 0xa4, 0x16, 0x25, 0x66, 0x24, 0x16, 0x67, 0xa4, 0x17, 0x25, 0x16, 0x64, 0xe8,
	0x25, 0x16, 0x64, 0x42, 0x4d, 0xc9, 0x4a, 0x2c, 0x4b, 0x0c, 0x60, 0x4c, 0x62, 0x03, 0xf3, 0x8c,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x08, 0xdb, 0xd1, 0x44, 0xd1, 0x01, 0x00, 0x00,
}
