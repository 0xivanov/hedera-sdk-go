// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TransactionBody.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A single transaction. All transaction types are possible here.
type TransactionBody struct {
	TransactionID            *TransactionID `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	NodeAccountID            *AccountID     `protobuf:"bytes,2,opt,name=nodeAccountID,proto3" json:"nodeAccountID,omitempty"`
	TransactionFee           uint64         `protobuf:"varint,3,opt,name=transactionFee,proto3" json:"transactionFee,omitempty"`
	TransactionValidDuration *Duration      `protobuf:"bytes,4,opt,name=transactionValidDuration,proto3" json:"transactionValidDuration,omitempty"`
	GenerateRecord           bool           `protobuf:"varint,5,opt,name=generateRecord,proto3" json:"generateRecord,omitempty"` // Deprecated: Do not use.
	Memo                     string         `protobuf:"bytes,6,opt,name=memo,proto3" json:"memo,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*TransactionBody_ContractCall
	//	*TransactionBody_ContractCreateInstance
	//	*TransactionBody_ContractUpdateInstance
	//	*TransactionBody_ContractDeleteInstance
	//	*TransactionBody_CryptoAddClaim
	//	*TransactionBody_CryptoCreateAccount
	//	*TransactionBody_CryptoDelete
	//	*TransactionBody_CryptoDeleteClaim
	//	*TransactionBody_CryptoTransfer
	//	*TransactionBody_CryptoUpdateAccount
	//	*TransactionBody_FileAppend
	//	*TransactionBody_FileCreate
	//	*TransactionBody_FileDelete
	//	*TransactionBody_FileUpdate
	//	*TransactionBody_SystemDelete
	//	*TransactionBody_SystemUndelete
	//	*TransactionBody_Freeze
	Data                 isTransactionBody_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TransactionBody) Reset()         { *m = TransactionBody{} }
func (m *TransactionBody) String() string { return proto.CompactTextString(m) }
func (*TransactionBody) ProtoMessage()    {}
func (*TransactionBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_adc97762ca10f37b, []int{0}
}

func (m *TransactionBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionBody.Unmarshal(m, b)
}
func (m *TransactionBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionBody.Marshal(b, m, deterministic)
}
func (m *TransactionBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionBody.Merge(m, src)
}
func (m *TransactionBody) XXX_Size() int {
	return xxx_messageInfo_TransactionBody.Size(m)
}
func (m *TransactionBody) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionBody.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionBody proto.InternalMessageInfo

func (m *TransactionBody) GetTransactionID() *TransactionID {
	if m != nil {
		return m.TransactionID
	}
	return nil
}

func (m *TransactionBody) GetNodeAccountID() *AccountID {
	if m != nil {
		return m.NodeAccountID
	}
	return nil
}

func (m *TransactionBody) GetTransactionFee() uint64 {
	if m != nil {
		return m.TransactionFee
	}
	return 0
}

func (m *TransactionBody) GetTransactionValidDuration() *Duration {
	if m != nil {
		return m.TransactionValidDuration
	}
	return nil
}

// Deprecated: Do not use.
func (m *TransactionBody) GetGenerateRecord() bool {
	if m != nil {
		return m.GenerateRecord
	}
	return false
}

func (m *TransactionBody) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

type isTransactionBody_Data interface {
	isTransactionBody_Data()
}

type TransactionBody_ContractCall struct {
	ContractCall *ContractCallTransactionBody `protobuf:"bytes,7,opt,name=contractCall,proto3,oneof"`
}

type TransactionBody_ContractCreateInstance struct {
	ContractCreateInstance *ContractCreateTransactionBody `protobuf:"bytes,8,opt,name=contractCreateInstance,proto3,oneof"`
}

type TransactionBody_ContractUpdateInstance struct {
	ContractUpdateInstance *ContractUpdateTransactionBody `protobuf:"bytes,9,opt,name=contractUpdateInstance,proto3,oneof"`
}

type TransactionBody_ContractDeleteInstance struct {
	ContractDeleteInstance *ContractDeleteTransactionBody `protobuf:"bytes,22,opt,name=contractDeleteInstance,proto3,oneof"`
}

type TransactionBody_CryptoAddClaim struct {
	CryptoAddClaim *CryptoAddClaimTransactionBody `protobuf:"bytes,10,opt,name=cryptoAddClaim,proto3,oneof"`
}

type TransactionBody_CryptoCreateAccount struct {
	CryptoCreateAccount *CryptoCreateTransactionBody `protobuf:"bytes,11,opt,name=cryptoCreateAccount,proto3,oneof"`
}

type TransactionBody_CryptoDelete struct {
	CryptoDelete *CryptoDeleteTransactionBody `protobuf:"bytes,12,opt,name=cryptoDelete,proto3,oneof"`
}

type TransactionBody_CryptoDeleteClaim struct {
	CryptoDeleteClaim *CryptoDeleteClaimTransactionBody `protobuf:"bytes,13,opt,name=cryptoDeleteClaim,proto3,oneof"`
}

type TransactionBody_CryptoTransfer struct {
	CryptoTransfer *CryptoTransferTransactionBody `protobuf:"bytes,14,opt,name=cryptoTransfer,proto3,oneof"`
}

type TransactionBody_CryptoUpdateAccount struct {
	CryptoUpdateAccount *CryptoUpdateTransactionBody `protobuf:"bytes,15,opt,name=cryptoUpdateAccount,proto3,oneof"`
}

type TransactionBody_FileAppend struct {
	FileAppend *FileAppendTransactionBody `protobuf:"bytes,16,opt,name=fileAppend,proto3,oneof"`
}

type TransactionBody_FileCreate struct {
	FileCreate *FileCreateTransactionBody `protobuf:"bytes,17,opt,name=fileCreate,proto3,oneof"`
}

type TransactionBody_FileDelete struct {
	FileDelete *FileDeleteTransactionBody `protobuf:"bytes,18,opt,name=fileDelete,proto3,oneof"`
}

type TransactionBody_FileUpdate struct {
	FileUpdate *FileUpdateTransactionBody `protobuf:"bytes,19,opt,name=fileUpdate,proto3,oneof"`
}

type TransactionBody_SystemDelete struct {
	SystemDelete *SystemDeleteTransactionBody `protobuf:"bytes,20,opt,name=systemDelete,proto3,oneof"`
}

type TransactionBody_SystemUndelete struct {
	SystemUndelete *SystemUndeleteTransactionBody `protobuf:"bytes,21,opt,name=systemUndelete,proto3,oneof"`
}

type TransactionBody_Freeze struct {
	Freeze *FreezeTransactionBody `protobuf:"bytes,23,opt,name=freeze,proto3,oneof"`
}

func (*TransactionBody_ContractCall) isTransactionBody_Data() {}

func (*TransactionBody_ContractCreateInstance) isTransactionBody_Data() {}

func (*TransactionBody_ContractUpdateInstance) isTransactionBody_Data() {}

func (*TransactionBody_ContractDeleteInstance) isTransactionBody_Data() {}

func (*TransactionBody_CryptoAddClaim) isTransactionBody_Data() {}

func (*TransactionBody_CryptoCreateAccount) isTransactionBody_Data() {}

func (*TransactionBody_CryptoDelete) isTransactionBody_Data() {}

func (*TransactionBody_CryptoDeleteClaim) isTransactionBody_Data() {}

func (*TransactionBody_CryptoTransfer) isTransactionBody_Data() {}

func (*TransactionBody_CryptoUpdateAccount) isTransactionBody_Data() {}

func (*TransactionBody_FileAppend) isTransactionBody_Data() {}

func (*TransactionBody_FileCreate) isTransactionBody_Data() {}

func (*TransactionBody_FileDelete) isTransactionBody_Data() {}

func (*TransactionBody_FileUpdate) isTransactionBody_Data() {}

func (*TransactionBody_SystemDelete) isTransactionBody_Data() {}

func (*TransactionBody_SystemUndelete) isTransactionBody_Data() {}

func (*TransactionBody_Freeze) isTransactionBody_Data() {}

func (m *TransactionBody) GetData() isTransactionBody_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TransactionBody) GetContractCall() *ContractCallTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_ContractCall); ok {
		return x.ContractCall
	}
	return nil
}

func (m *TransactionBody) GetContractCreateInstance() *ContractCreateTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_ContractCreateInstance); ok {
		return x.ContractCreateInstance
	}
	return nil
}

func (m *TransactionBody) GetContractUpdateInstance() *ContractUpdateTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_ContractUpdateInstance); ok {
		return x.ContractUpdateInstance
	}
	return nil
}

func (m *TransactionBody) GetContractDeleteInstance() *ContractDeleteTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_ContractDeleteInstance); ok {
		return x.ContractDeleteInstance
	}
	return nil
}

func (m *TransactionBody) GetCryptoAddClaim() *CryptoAddClaimTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_CryptoAddClaim); ok {
		return x.CryptoAddClaim
	}
	return nil
}

func (m *TransactionBody) GetCryptoCreateAccount() *CryptoCreateTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_CryptoCreateAccount); ok {
		return x.CryptoCreateAccount
	}
	return nil
}

func (m *TransactionBody) GetCryptoDelete() *CryptoDeleteTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_CryptoDelete); ok {
		return x.CryptoDelete
	}
	return nil
}

func (m *TransactionBody) GetCryptoDeleteClaim() *CryptoDeleteClaimTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_CryptoDeleteClaim); ok {
		return x.CryptoDeleteClaim
	}
	return nil
}

func (m *TransactionBody) GetCryptoTransfer() *CryptoTransferTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_CryptoTransfer); ok {
		return x.CryptoTransfer
	}
	return nil
}

func (m *TransactionBody) GetCryptoUpdateAccount() *CryptoUpdateTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_CryptoUpdateAccount); ok {
		return x.CryptoUpdateAccount
	}
	return nil
}

func (m *TransactionBody) GetFileAppend() *FileAppendTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_FileAppend); ok {
		return x.FileAppend
	}
	return nil
}

func (m *TransactionBody) GetFileCreate() *FileCreateTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_FileCreate); ok {
		return x.FileCreate
	}
	return nil
}

func (m *TransactionBody) GetFileDelete() *FileDeleteTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_FileDelete); ok {
		return x.FileDelete
	}
	return nil
}

func (m *TransactionBody) GetFileUpdate() *FileUpdateTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_FileUpdate); ok {
		return x.FileUpdate
	}
	return nil
}

func (m *TransactionBody) GetSystemDelete() *SystemDeleteTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_SystemDelete); ok {
		return x.SystemDelete
	}
	return nil
}

func (m *TransactionBody) GetSystemUndelete() *SystemUndeleteTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_SystemUndelete); ok {
		return x.SystemUndelete
	}
	return nil
}

func (m *TransactionBody) GetFreeze() *FreezeTransactionBody {
	if x, ok := m.GetData().(*TransactionBody_Freeze); ok {
		return x.Freeze
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TransactionBody) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TransactionBody_ContractCall)(nil),
		(*TransactionBody_ContractCreateInstance)(nil),
		(*TransactionBody_ContractUpdateInstance)(nil),
		(*TransactionBody_ContractDeleteInstance)(nil),
		(*TransactionBody_CryptoAddClaim)(nil),
		(*TransactionBody_CryptoCreateAccount)(nil),
		(*TransactionBody_CryptoDelete)(nil),
		(*TransactionBody_CryptoDeleteClaim)(nil),
		(*TransactionBody_CryptoTransfer)(nil),
		(*TransactionBody_CryptoUpdateAccount)(nil),
		(*TransactionBody_FileAppend)(nil),
		(*TransactionBody_FileCreate)(nil),
		(*TransactionBody_FileDelete)(nil),
		(*TransactionBody_FileUpdate)(nil),
		(*TransactionBody_SystemDelete)(nil),
		(*TransactionBody_SystemUndelete)(nil),
		(*TransactionBody_Freeze)(nil),
	}
}

func init() {
	proto.RegisterType((*TransactionBody)(nil), "proto.TransactionBody")
}

func init() { proto.RegisterFile("TransactionBody.proto", fileDescriptor_adc97762ca10f37b) }

var fileDescriptor_adc97762ca10f37b = []byte{
	// 638 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x95, 0xcf, 0x4f, 0xdb, 0x30,
	0x14, 0xc7, 0x17, 0x56, 0x3a, 0x30, 0xb4, 0x80, 0x29, 0x60, 0x55, 0xd3, 0x54, 0xa1, 0x69, 0xab,
	0x76, 0xe8, 0x61, 0x93, 0x38, 0xec, 0xd6, 0xb4, 0xaa, 0xa8, 0x26, 0x4d, 0x53, 0x56, 0xd8, 0x6d,
	0x92, 0xe7, 0xb8, 0xb4, 0x52, 0x9a, 0x44, 0x8e, 0x39, 0x74, 0xb7, 0xfd, 0xe7, 0x53, 0xed, 0x38,
	0x7d, 0x2f, 0x3f, 0x38, 0x51, 0xbe, 0x7e, 0xdf, 0x8f, 0xed, 0xe7, 0x6f, 0x6c, 0x72, 0xb5, 0x50,
	0x3c, 0xce, 0xb8, 0xd0, 0xeb, 0x24, 0xf6, 0x93, 0x70, 0x3b, 0x4a, 0x55, 0xa2, 0x13, 0x7a, 0x68,
	0xfe, 0xf4, 0xe9, 0xcf, 0x6d, 0xa6, 0xe5, 0x66, 0x2a, 0x23, 0xa9, 0xa5, 0x1d, 0xea, 0xf7, 0xac,
	0xf6, 0x10, 0x87, 0x50, 0x3d, 0x9d, 0x29, 0x29, 0xff, 0xba, 0xff, 0xe8, 0x24, 0x89, 0xb5, 0xe2,
	0x42, 0x4f, 0x78, 0x14, 0x39, 0x5f, 0xa1, 0x29, 0xc9, 0xf7, 0x34, 0xa7, 0x3e, 0xa4, 0x21, 0x54,
	0xd5, 0x36, 0xd5, 0xc9, 0x38, 0x0c, 0x27, 0x11, 0x5f, 0x6f, 0x0a, 0xaa, 0x51, 0x91, 0x3f, 0xd7,
	0xd0, 0x0a, 0x6f, 0xa0, 0x06, 0x01, 0x39, 0xd6, 0x6c, 0x79, 0x29, 0x15, 0x46, 0xa0, 0x05, 0x9c,
	0xcf, 0xd6, 0x91, 0x1c, 0xa7, 0xa9, 0x8c, 0x43, 0xa8, 0xa0, 0xa9, 0x8d, 0x82, 0x26, 0x36, 0x0a,
	0xe2, 0x74, 0xa7, 0xcf, 0x8a, 0xef, 0x7a, 0xeb, 0x2a, 0x7c, 0x9e, 0xad, 0xc5, 0x62, 0x9b, 0xca,
	0xac, 0xdc, 0x00, 0x48, 0xba, 0xfd, 0xd7, 0x21, 0x67, 0xa5, 0x93, 0xa1, 0x5f, 0x49, 0x47, 0xef,
	0xa5, 0xf9, 0x94, 0x79, 0x03, 0x6f, 0x78, 0xf2, 0xb9, 0x67, 0x2d, 0xa3, 0x05, 0x1c, 0x0b, 0x70,
	0x29, 0xbd, 0x23, 0x9d, 0x38, 0x09, 0xe5, 0x58, 0x88, 0xe4, 0x39, 0xd6, 0xf3, 0x29, 0x3b, 0x30,
	0xde, 0xf3, 0xdc, 0x5b, 0xe8, 0x01, 0x2e, 0xa3, 0x1f, 0x48, 0x17, 0x80, 0x66, 0x52, 0xb2, 0xd7,
	0x03, 0x6f, 0xd8, 0x0a, 0x4a, 0x2a, 0xfd, 0x46, 0x18, 0x50, 0x1e, 0x79, 0xb4, 0x0e, 0xdd, 0xce,
	0x59, 0xcb, 0x4c, 0x75, 0x96, 0x4f, 0xe5, 0xe4, 0xa0, 0xd1, 0x40, 0x3f, 0x91, 0xee, 0x93, 0x8c,
	0xa5, 0xe2, 0x5a, 0x06, 0x52, 0x24, 0x2a, 0x64, 0x87, 0x03, 0x6f, 0x78, 0xe4, 0x1f, 0x30, 0x2f,
	0x28, 0x8d, 0x50, 0x4a, 0x5a, 0x1b, 0xb9, 0x49, 0x58, 0x7b, 0xe0, 0x0d, 0x8f, 0x03, 0xf3, 0x9b,
	0xde, 0x93, 0x53, 0x01, 0xf2, 0xc7, 0xde, 0x98, 0x05, 0xdc, 0xe6, 0x0b, 0x80, 0xd1, 0x2c, 0xb5,
	0xf8, 0xfe, 0x55, 0x80, 0x9c, 0xf4, 0x37, 0xb9, 0x16, 0x28, 0xb5, 0xf3, 0x38, 0xd3, 0x3c, 0x16,
	0x92, 0x1d, 0x19, 0xe6, 0xfb, 0x32, 0xd3, 0x14, 0x55, 0xa9, 0x0d, 0x14, 0xc8, 0xb7, 0xb1, 0x29,
	0xf8, 0xc7, 0xb5, 0x7c, 0x5b, 0xf4, 0x02, 0x1f, 0x53, 0x20, 0xdf, 0xc6, 0xab, 0xe0, 0x5f, 0xd7,
	0xf2, 0x6d, 0xd1, 0x0b, 0x7c, 0x4c, 0xa1, 0xdf, 0x49, 0x57, 0xa0, 0x2f, 0x95, 0x11, 0xcc, 0x45,
	0x83, 0x55, 0x6e, 0xc9, 0x4d, 0x1f, 0xc9, 0xa5, 0x00, 0xdf, 0x78, 0x9e, 0x43, 0x76, 0x82, 0x0f,
	0x10, 0x54, 0x54, 0x91, 0x75, 0x00, 0x93, 0x08, 0x70, 0x27, 0xb0, 0xd3, 0x1a, 0x60, 0xd3, 0xde,
	0x91, 0x93, 0xfe, 0x22, 0x17, 0xa2, 0x7c, 0xbb, 0xb0, 0x8e, 0xc1, 0x7d, 0xac, 0xc1, 0x35, 0xec,
	0xbb, 0xca, 0xd8, 0xb7, 0xd2, 0xdd, 0x4e, 0xac, 0x5b, 0xd3, 0x4a, 0x37, 0xd8, 0xd8, 0x4a, 0x57,
	0xb0, 0x6f, 0xa5, 0x8d, 0x84, 0x6b, 0xe5, 0x59, 0xcd, 0xce, 0x9b, 0x52, 0x55, 0x07, 0xa0, 0x3e,
	0x21, 0xcb, 0xe2, 0x6e, 0x64, 0xe7, 0x06, 0x37, 0xc8, 0x71, 0xfb, 0x4b, 0xb3, 0x0a, 0x03, 0x2e,
	0xc7, 0xb0, 0x67, 0xc4, 0x2e, 0x2a, 0x8c, 0xa6, 0xb3, 0x05, 0x2e, 0xc7, 0xc8, 0x0f, 0x94, 0x56,
	0x18, 0x4d, 0xc7, 0x09, 0x5c, 0x8e, 0x61, 0x37, 0xc8, 0x2e, 0x2b, 0x8c, 0xa6, 0xc6, 0x00, 0xd7,
	0x2e, 0x5a, 0x19, 0x78, 0x24, 0x59, 0x0f, 0x35, 0x18, 0xbe, 0x9f, 0x35, 0xd1, 0x82, 0xce, 0x5d,
	0x02, 0x32, 0xf4, 0xb4, 0xb2, 0x2b, 0x94, 0x00, 0xfc, 0xee, 0xd6, 0x24, 0x00, 0xbb, 0xe9, 0x1d,
	0x69, 0x2f, 0xcd, 0xa3, 0xcc, 0x6e, 0x0c, 0xe7, 0xad, 0xdb, 0x99, 0x11, 0xab, 0xfe, 0xbc, 0xda,
	0x6f, 0x93, 0x56, 0xc8, 0x35, 0xf7, 0xdf, 0x91, 0xbe, 0x48, 0x36, 0xa3, 0x95, 0x0c, 0xa5, 0xe2,
	0xa3, 0x15, 0xcf, 0x56, 0x4f, 0x8a, 0xa7, 0x2b, 0x4b, 0xf9, 0xe1, 0xfd, 0x69, 0x9b, 0x1f, 0x5f,
	0xfe, 0x07, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xaf, 0xc6, 0x0a, 0x43, 0x08, 0x00, 0x00,
}
