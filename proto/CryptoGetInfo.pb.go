// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CryptoGetInfo.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Get all the information about an account, including the balance. This does not get the list of account records.
type CryptoGetInfoQuery struct {
	Header               *QueryHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	AccountID            *AccountID   `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CryptoGetInfoQuery) Reset()         { *m = CryptoGetInfoQuery{} }
func (m *CryptoGetInfoQuery) String() string { return proto.CompactTextString(m) }
func (*CryptoGetInfoQuery) ProtoMessage()    {}
func (*CryptoGetInfoQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb659bcbcf0fa194, []int{0}
}

func (m *CryptoGetInfoQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoGetInfoQuery.Unmarshal(m, b)
}
func (m *CryptoGetInfoQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoGetInfoQuery.Marshal(b, m, deterministic)
}
func (m *CryptoGetInfoQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoGetInfoQuery.Merge(m, src)
}
func (m *CryptoGetInfoQuery) XXX_Size() int {
	return xxx_messageInfo_CryptoGetInfoQuery.Size(m)
}
func (m *CryptoGetInfoQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoGetInfoQuery.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoGetInfoQuery proto.InternalMessageInfo

func (m *CryptoGetInfoQuery) GetHeader() *QueryHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CryptoGetInfoQuery) GetAccountID() *AccountID {
	if m != nil {
		return m.AccountID
	}
	return nil
}

// Response when the client sends the node CryptoGetInfoQuery
type CryptoGetInfoResponse struct {
	Header               *ResponseHeader                    `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	AccountInfo          *CryptoGetInfoResponse_AccountInfo `protobuf:"bytes,2,opt,name=accountInfo,proto3" json:"accountInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *CryptoGetInfoResponse) Reset()         { *m = CryptoGetInfoResponse{} }
func (m *CryptoGetInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CryptoGetInfoResponse) ProtoMessage()    {}
func (*CryptoGetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb659bcbcf0fa194, []int{1}
}

func (m *CryptoGetInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoGetInfoResponse.Unmarshal(m, b)
}
func (m *CryptoGetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoGetInfoResponse.Marshal(b, m, deterministic)
}
func (m *CryptoGetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoGetInfoResponse.Merge(m, src)
}
func (m *CryptoGetInfoResponse) XXX_Size() int {
	return xxx_messageInfo_CryptoGetInfoResponse.Size(m)
}
func (m *CryptoGetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoGetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoGetInfoResponse proto.InternalMessageInfo

func (m *CryptoGetInfoResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CryptoGetInfoResponse) GetAccountInfo() *CryptoGetInfoResponse_AccountInfo {
	if m != nil {
		return m.AccountInfo
	}
	return nil
}

type CryptoGetInfoResponse_AccountInfo struct {
	AccountID                      *AccountID `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	ContractAccountID              string     `protobuf:"bytes,2,opt,name=contractAccountID,proto3" json:"contractAccountID,omitempty"`
	Deleted                        bool       `protobuf:"varint,3,opt,name=deleted,proto3" json:"deleted,omitempty"`
	ProxyAccountID                 *AccountID `protobuf:"bytes,4,opt,name=proxyAccountID,proto3" json:"proxyAccountID,omitempty"`
	ProxyReceived                  int64      `protobuf:"varint,6,opt,name=proxyReceived,proto3" json:"proxyReceived,omitempty"`
	Key                            *Key       `protobuf:"bytes,7,opt,name=key,proto3" json:"key,omitempty"`
	Balance                        uint64     `protobuf:"varint,8,opt,name=balance,proto3" json:"balance,omitempty"`
	GenerateSendRecordThreshold    uint64     `protobuf:"varint,9,opt,name=generateSendRecordThreshold,proto3" json:"generateSendRecordThreshold,omitempty"`
	GenerateReceiveRecordThreshold uint64     `protobuf:"varint,10,opt,name=generateReceiveRecordThreshold,proto3" json:"generateReceiveRecordThreshold,omitempty"`
	ReceiverSigRequired            bool       `protobuf:"varint,11,opt,name=receiverSigRequired,proto3" json:"receiverSigRequired,omitempty"`
	ExpirationTime                 *Timestamp `protobuf:"bytes,12,opt,name=expirationTime,proto3" json:"expirationTime,omitempty"`
	AutoRenewPeriod                *Duration  `protobuf:"bytes,13,opt,name=autoRenewPeriod,proto3" json:"autoRenewPeriod,omitempty"`
	Claims                         []*Claim   `protobuf:"bytes,14,rep,name=claims,proto3" json:"claims,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}   `json:"-"`
	XXX_unrecognized               []byte     `json:"-"`
	XXX_sizecache                  int32      `json:"-"`
}

func (m *CryptoGetInfoResponse_AccountInfo) Reset()         { *m = CryptoGetInfoResponse_AccountInfo{} }
func (m *CryptoGetInfoResponse_AccountInfo) String() string { return proto.CompactTextString(m) }
func (*CryptoGetInfoResponse_AccountInfo) ProtoMessage()    {}
func (*CryptoGetInfoResponse_AccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb659bcbcf0fa194, []int{1, 0}
}

func (m *CryptoGetInfoResponse_AccountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoGetInfoResponse_AccountInfo.Unmarshal(m, b)
}
func (m *CryptoGetInfoResponse_AccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoGetInfoResponse_AccountInfo.Marshal(b, m, deterministic)
}
func (m *CryptoGetInfoResponse_AccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoGetInfoResponse_AccountInfo.Merge(m, src)
}
func (m *CryptoGetInfoResponse_AccountInfo) XXX_Size() int {
	return xxx_messageInfo_CryptoGetInfoResponse_AccountInfo.Size(m)
}
func (m *CryptoGetInfoResponse_AccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoGetInfoResponse_AccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoGetInfoResponse_AccountInfo proto.InternalMessageInfo

func (m *CryptoGetInfoResponse_AccountInfo) GetAccountID() *AccountID {
	if m != nil {
		return m.AccountID
	}
	return nil
}

func (m *CryptoGetInfoResponse_AccountInfo) GetContractAccountID() string {
	if m != nil {
		return m.ContractAccountID
	}
	return ""
}

func (m *CryptoGetInfoResponse_AccountInfo) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *CryptoGetInfoResponse_AccountInfo) GetProxyAccountID() *AccountID {
	if m != nil {
		return m.ProxyAccountID
	}
	return nil
}

func (m *CryptoGetInfoResponse_AccountInfo) GetProxyReceived() int64 {
	if m != nil {
		return m.ProxyReceived
	}
	return 0
}

func (m *CryptoGetInfoResponse_AccountInfo) GetKey() *Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CryptoGetInfoResponse_AccountInfo) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *CryptoGetInfoResponse_AccountInfo) GetGenerateSendRecordThreshold() uint64 {
	if m != nil {
		return m.GenerateSendRecordThreshold
	}
	return 0
}

func (m *CryptoGetInfoResponse_AccountInfo) GetGenerateReceiveRecordThreshold() uint64 {
	if m != nil {
		return m.GenerateReceiveRecordThreshold
	}
	return 0
}

func (m *CryptoGetInfoResponse_AccountInfo) GetReceiverSigRequired() bool {
	if m != nil {
		return m.ReceiverSigRequired
	}
	return false
}

func (m *CryptoGetInfoResponse_AccountInfo) GetExpirationTime() *Timestamp {
	if m != nil {
		return m.ExpirationTime
	}
	return nil
}

func (m *CryptoGetInfoResponse_AccountInfo) GetAutoRenewPeriod() *Duration {
	if m != nil {
		return m.AutoRenewPeriod
	}
	return nil
}

func (m *CryptoGetInfoResponse_AccountInfo) GetClaims() []*Claim {
	if m != nil {
		return m.Claims
	}
	return nil
}

func init() {
	proto.RegisterType((*CryptoGetInfoQuery)(nil), "proto.CryptoGetInfoQuery")
	proto.RegisterType((*CryptoGetInfoResponse)(nil), "proto.CryptoGetInfoResponse")
	proto.RegisterType((*CryptoGetInfoResponse_AccountInfo)(nil), "proto.CryptoGetInfoResponse.AccountInfo")
}

func init() { proto.RegisterFile("CryptoGetInfo.proto", fileDescriptor_bb659bcbcf0fa194) }

var fileDescriptor_bb659bcbcf0fa194 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x51, 0x6f, 0xd3, 0x3c,
	0x14, 0x55, 0xbe, 0xf6, 0xeb, 0xd6, 0xdb, 0xad, 0xdd, 0x3c, 0x26, 0x59, 0x05, 0x4d, 0xd1, 0xb4,
	0x87, 0x08, 0x41, 0x84, 0xc6, 0x0b, 0xbc, 0xd1, 0x6d, 0x02, 0x06, 0x2f, 0xc3, 0xeb, 0x1f, 0xf0,
	0xec, 0xbb, 0x26, 0xa2, 0xb5, 0x83, 0xe3, 0xc0, 0xf2, 0x13, 0xf8, 0xbf, 0xfc, 0x00, 0x14, 0xc7,
	0xe9, 0x9a, 0x30, 0xd8, 0x53, 0xeb, 0x73, 0xce, 0x3d, 0xe7, 0xde, 0xab, 0x5c, 0x38, 0x38, 0x37,
	0x65, 0x66, 0xf5, 0x07, 0xb4, 0x97, 0xea, 0x56, 0xc7, 0x99, 0xd1, 0x56, 0x93, 0xff, 0xdd, 0xcf,
	0x74, 0x32, 0x4f, 0x57, 0x98, 0x5b, 0xbe, 0xca, 0x6a, 0x7c, 0x3a, 0xbe, 0x28, 0x0c, 0xb7, 0xa9,
	0x56, 0xfe, 0xbd, 0x77, 0xc6, 0xf3, 0x54, 0xcc, 0xcb, 0x0c, 0x73, 0x8f, 0xec, 0x7f, 0x29, 0xd0,
	0x94, 0x1f, 0x91, 0x4b, 0x34, 0x1e, 0x7a, 0xc2, 0x30, 0xcf, 0xb4, 0xca, 0xb1, 0x8d, 0xd6, 0xb9,
	0x33, 0x29, 0xcf, 0x97, 0x3c, 0x5d, 0xd5, 0xe8, 0x71, 0x06, 0xa4, 0xd5, 0x8f, 0x73, 0x23, 0xcf,
	0x61, 0x90, 0xb8, 0x5a, 0x1a, 0x84, 0x41, 0x34, 0x3a, 0x25, 0xb5, 0x3a, 0xde, 0xc8, 0x62, 0x5e,
	0x41, 0x62, 0x18, 0x72, 0x21, 0x74, 0xa1, 0xec, 0xe5, 0x05, 0xfd, 0xcf, 0xc9, 0xf7, 0xbc, 0x7c,
	0xd6, 0xe0, 0xec, 0x5e, 0x72, 0xfc, 0x73, 0x00, 0x87, 0xad, 0xc8, 0xa6, 0x5b, 0xf2, 0xb2, 0x93,
	0x7a, 0xe8, 0x6d, 0xda, 0xe3, 0xac, 0x83, 0x3f, 0xc1, 0xa8, 0x71, 0x55, 0xb7, 0xda, 0x47, 0x47,
	0xbe, 0xe6, 0xc1, 0x84, 0x75, 0x43, 0x15, 0xb6, 0x59, 0x3c, 0xfd, 0xd5, 0x87, 0xd1, 0x06, 0xd9,
	0x1e, 0x2a, 0x78, 0x74, 0x28, 0xf2, 0x02, 0xf6, 0x85, 0x56, 0xd6, 0x70, 0x61, 0x67, 0xad, 0x65,
	0x0c, 0xd9, 0x9f, 0x04, 0xa1, 0xb0, 0x25, 0x71, 0x89, 0x16, 0x25, 0xed, 0x85, 0x41, 0xb4, 0xcd,
	0x9a, 0x27, 0x79, 0x03, 0xe3, 0xcc, 0xe8, 0xbb, 0xf2, 0xde, 0xa4, 0xff, 0x97, 0xf0, 0x8e, 0x8e,
	0x9c, 0xc0, 0xae, 0x43, 0x18, 0x0a, 0x4c, 0xbf, 0xa3, 0xa4, 0x83, 0x30, 0x88, 0x7a, 0xac, 0x0d,
	0x92, 0x67, 0xd0, 0xfb, 0x8a, 0x25, 0xdd, 0x72, 0xa6, 0xe0, 0x4d, 0x3f, 0x63, 0xc9, 0x2a, 0xb8,
	0xea, 0xeb, 0x86, 0x2f, 0xb9, 0x12, 0x48, 0xb7, 0xc3, 0x20, 0xea, 0xb3, 0xe6, 0x49, 0xde, 0xc1,
	0xd3, 0x05, 0x2a, 0x34, 0xdc, 0xe2, 0x35, 0x2a, 0xc9, 0x50, 0x68, 0x23, 0xe7, 0x89, 0xc1, 0x3c,
	0xd1, 0x4b, 0x49, 0x87, 0x4e, 0xfd, 0x2f, 0x09, 0x79, 0x0f, 0x47, 0x0d, 0xed, 0xbb, 0xe9, 0x9a,
	0x80, 0x33, 0x79, 0x44, 0x45, 0x5e, 0xc1, 0x81, 0xa9, 0x19, 0x73, 0x9d, 0x2e, 0x18, 0x7e, 0x2b,
	0x52, 0x83, 0x92, 0x8e, 0xdc, 0x1e, 0x1f, 0xa2, 0xaa, 0x9d, 0xe2, 0x5d, 0x96, 0xd6, 0x77, 0x54,
	0x1d, 0x18, 0xdd, 0x69, 0xed, 0x74, 0x7d, 0x73, 0xac, 0xa3, 0x23, 0x6f, 0x61, 0xc2, 0x0b, 0xab,
	0x19, 0x2a, 0xfc, 0x71, 0x85, 0x26, 0xd5, 0x92, 0xee, 0xba, 0xd2, 0x89, 0x2f, 0x6d, 0xae, 0x93,
	0x75, 0x75, 0xe4, 0x04, 0x06, 0xa2, 0x3a, 0xb3, 0x9c, 0x8e, 0xc3, 0x5e, 0x34, 0x3a, 0xdd, 0x69,
	0xbe, 0xcb, 0x0a, 0x64, 0x9e, 0x3b, 0x3b, 0x82, 0xa9, 0xd0, 0xab, 0x38, 0x41, 0x89, 0x86, 0xc7,
	0x09, 0xcf, 0x93, 0x85, 0xe1, 0x59, 0x52, 0x6b, 0xaf, 0x82, 0x9b, 0x81, 0xfb, 0xf3, 0xfa, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x52, 0x8e, 0x6d, 0x34, 0x04, 0x00, 0x00,
}
